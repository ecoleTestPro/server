version: '3.8'

services:
  # Service Application Laravel/React
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ecoletestpro_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
    networks:
      - ecoletestpro_network
    depends_on:
      - mysql
      - redis
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE:-ecoletestpro}
      - DB_USERNAME=root
      - DB_PASSWORD=${DB_PASSWORD:-secret}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=null
      - REDIS_PORT=6379
      - CACHE_DRIVER=redis
      - QUEUE_CONNECTION=redis
      - SESSION_DRIVER=redis
    ports:
      - "8000:80"
      - "5173:5173"  # Port pour Vite dev server

  # Service Nginx
  nginx:
    image: nginx:alpine
    container_name: ecoletestpro_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - ecoletestpro_network

  # Service MySQL
  mysql:
    image: mysql:8.0
    container_name: ecoletestpro_mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_DATABASE: ${DB_DATABASE:-ecoletestpro}
      MYSQL_USER: ecoletestpro_user
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
    volumes:
      - mysql_data:/var/lib/mysql
      - /docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ecoletestpro_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Service phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: ecoletestpro_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${DB_PASSWORD:-secret}
      UPLOAD_LIMIT: 100M
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - ecoletestpro_network

  # Service Redis pour le cache et les queues
  redis:
    image: redis:alpine
    container_name: ecoletestpro_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ecoletestpro_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Service MailHog pour les emails en développement
  mailhog:
    image: mailhog/mailhog:latest
    container_name: ecoletestpro_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - ecoletestpro_network

  # Service Node pour le développement (hot reload)
  node:
    image: node:18-alpine
    container_name: ecoletestpro_node
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    command: sh -c "npm install --legacy-peer-deps && npm run dev"
    ports:
      - "3000:3000"
      - "3001:3001"
    networks:
      - ecoletestpro_network
    depends_on:
      - app

# Réseaux
networks:
  ecoletestpro_network:
    driver: bridge

# Volumes
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local